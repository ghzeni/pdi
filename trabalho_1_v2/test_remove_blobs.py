import unittest
from main import remover_mini_blobs

class TestRemoverMiniBlobs(unittest.TestCase):
    def test_remover_mini_blobs(self):
        blob_list = [
            {'n_pixels': 10, 'L': (0, 0), 'R': (10, 0), 'T': (0, 0), 'B': (0, 10)},
            {'n_pixels': 20, 'L': (0, 0), 'R': (20, 0), 'T': (0, 0), 'B': (0, 20)},
            {'n_pixels': 5, 'L': (0, 0), 'R': (5, 0), 'T': (0, 0), 'B': (0, 5)},
            {'n_pixels': 15, 'L': (0, 0), 'R': (15, 0), 'T': (0, 0), 'B': (0, 15)}
        ]
        largura_min = 10
        altura_min = 5
        n_pixels_min = 5

        expected_output = [
            {'n_pixels': 10, 'L': (0, 0), 'R': (10, 0), 'T': (0, 0), 'B': (0, 10)},
            {'n_pixels': 20, 'L': (0, 0), 'R': (20, 0), 'T': (0, 0), 'B': (0, 20)},
            {'n_pixels': 15, 'L': (0, 0), 'R': (15, 0), 'T': (0, 0), 'B': (0, 15)}
        ]

        result = remover_mini_blobs(blob_list, largura_min, altura_min, n_pixels_min)
        print (expected_output)
        print (result)
        # self.assertEqual(result, expected_output)

    def test_two(self):
        blob_list = [
            {'label': [1], 'n_pixels': 706, 'T': (13, 311), 'R': (20, 332), 'B': (31, 319), 'L': (18, 285)}, 
            {'label': [3], 'n_pixels': 703, 'T': (34, 89), 'R': (46, 130), 'B': (52, 120), 'L': (38, 83)}, 
            {'label': [4], 'n_pixels': 688, 'T': (60, 495), 'R': (69, 501), 'B': (99, 468), 'L': (93, 466)}, 
            {'label': [5], 'n_pixels': 751, 'T': (91, 192), 'R': (125, 226), 'B': (129, 221), 'L': (91, 192)}, 
            {'label': [6], 'n_pixels': 828, 'T': (125, 352), 'R': (163, 367), 'B': (173, 360), 'L': (138, 345)}, 
            {'label': [7], 'n_pixels': 732, 'T': (148, 65), 'R': (167, 74), 'B': (195, 58), 'L': (184, 52)}, 
            {'label': [9], 'n_pixels': 1, 'T': (154, 173), 'R': (154, 173), 'B': (154, 173), 'L': (154, 173)}, 
            {'label': [11], 'n_pixels': 843, 'T': (174, 176), 'R': (189, 180), 'B': (225, 165), 'L': (211, 155)}, 
            {'label': [13], 'n_pixels': 558, 'T': (223, 472), 'R': (236, 476), 'B': (264, 454), 'L': (261, 448)}, 
            {'label': [14], 'n_pixels': 785, 'T': (230, 345), 'R': (266, 377), 'B': (271, 372), 'L': (231, 344)}, 
            {'label': [15], 'n_pixels': 742, 'T': (248, 228), 'R': (266, 238), 'B': (296, 221), 'L': (282, 216)}, 
            {'label': [17], 'n_pixels': 665, 'T': (268, 18), 'R': (301, 47), 'B': (307, 40), 'L': (271, 16)}, 
            {'label': [18], 'n_pixels': 774, 'T': (293, 148), 'R': (313, 155), 'B': (341, 145), 'L': (319, 135)}, 
            {'label': [19], 'n_pixels': 642, 'T': (321, 337), 'R': (327, 348), 'B': (355, 319), 'L': (350, 315)}, 
            {'label': [20], 'n_pixels': 798, 'T': (339, 520), 'R': (342, 536), 'B': (362, 509), 'L': (350, 489)}, 
            {'label': [21], 'n_pixels': 793, 'T': (358, 231), 'R': (365, 246), 'B': (389, 207), 'L': (381, 199)}, 
            {'label': [22], 'n_pixels': 850, 'T': (417, 134), 'R': (435, 175), 'B': (438, 171), 'L': (425, 123)}
        ]
        largura_min = 5
        altura_min = 5
        n_pixels_min = 10

        expected_output = [
            {'label': [1], 'n_pixels': 706, 'T': (13, 311), 'R': (20, 332), 'B': (31, 319), 'L': (18, 285)}, 
            {'label': [3], 'n_pixels': 703, 'T': (34, 89), 'R': (46, 130), 'B': (52, 120), 'L': (38, 83)}, 
            {'label': [4], 'n_pixels': 688, 'T': (60, 495), 'R': (69, 501), 'B': (99, 468), 'L': (93, 466)}, 
            {'label': [5], 'n_pixels': 751, 'T': (91, 192), 'R': (125, 226), 'B': (129, 221), 'L': (91, 192)}, 
            {'label': [6], 'n_pixels': 828, 'T': (125, 352), 'R': (163, 367), 'B': (173, 360), 'L': (138, 345)}, 
            {'label': [7], 'n_pixels': 732, 'T': (148, 65), 'R': (167, 74), 'B': (195, 58), 'L': (184, 52)}, 
            {'label': [11], 'n_pixels': 843, 'T': (174, 176), 'R': (189, 180), 'B': (225, 165), 'L': (211, 155)}, 
            {'label': [13], 'n_pixels': 558, 'T': (223, 472), 'R': (236, 476), 'B': (264, 454), 'L': (261, 448)}, 
            {'label': [14], 'n_pixels': 785, 'T': (230, 345), 'R': (266, 377), 'B': (271, 372), 'L': (231, 344)}, 
            {'label': [15], 'n_pixels': 742, 'T': (248, 228), 'R': (266, 238), 'B': (296, 221), 'L': (282, 216)}, 
            {'label': [17], 'n_pixels': 665, 'T': (268, 18), 'R': (301, 47), 'B': (307, 40), 'L': (271, 16)}, 
            {'label': [18], 'n_pixels': 774, 'T': (293, 148), 'R': (313, 155), 'B': (341, 145), 'L': (319, 135)}, 
            {'label': [19], 'n_pixels': 642, 'T': (321, 337), 'R': (327, 348), 'B': (355, 319), 'L': (350, 315)}, 
            {'label': [20], 'n_pixels': 798, 'T': (339, 520), 'R': (342, 536), 'B': (362, 509), 'L': (350, 489)}, 
            {'label': [21], 'n_pixels': 793, 'T': (358, 231), 'R': (365, 246), 'B': (389, 207), 'L': (381, 199)}, 
            {'label': [22], 'n_pixels': 850, 'T': (417, 134), 'R': (435, 175), 'B': (438, 171), 'L': (425, 123)}
        ]

        result = remover_mini_blobs(blob_list, largura_min, altura_min, n_pixels_min)
        print (expected_output)
        print (result)
        # self.assertEqual(result, expected_output)

if __name__ == '__main__':
    unittest.main()